@using SoldierTrack.Services.Exercise.Models
@using SoldierTrack.Web.Common.Extensions

@model ExerciseDetailsServiceModel

@{
    this.ViewData["Title"] = "Exercise Details";
}

@if (this.TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <p>@this.TempData["SuccessMessage"]</p>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="card shadow-sm border-0 rounded-4 d-flex flex-column justify-content-between">
                <div>
                    <div class="position-relative">
                        <img src="@this.Model.ImageUrl"
                             alt="@this.Model.Name"
                             class="card-img-top img-fluid rounded-top"
                             style="max-height: 400px; object-fit: cover;">
                        <div class="badge-overlay">
                            @if (this.Model.IsForBeginners)
                            {
                                <span class="badge bg-primary badge-lg"><i class="fas fa-user-check"></i> Beginner-Friendly</span>
                            }
                            else
                            {
                                <span class="badge bg-danger badge-lg"><i class="fas fa-user-tie"></i> Advanced</span>
                            }
                            @if (this.Model.AthleteId == null)
                            {
                                <span class="badge bg-primary badge-lg">
                                    <i class="fas fa-check-circle"></i> Approved
                                </span>
                            }
                            else
                            {
                                <span class="badge bg-danger badge-lg">
                                    <i class="fas fa-cogs"></i> Custom
                                </span>
                            }
                        </div>
                    </div>
                    <div class="card-body text-center">
                        <h2 class="card-title fw-bold text-dark mb-3">@this.Model.Name</h2>
                        <p class="text-muted fs-6">
                            Category: <span class="fw-semibold text-secondary">@this.Model.Category</span>
                        </p>
                        <p class="card-text text-muted fs-5">@this.Model.Description</p>
                    </div>
                </div>
                @if (this.Model.Rankings.Count() > 0)
                {
                    <div class="card-body mt-4">
                        <h3 class="card-title text-center text-primary mb-3"><i class="fas fa-trophy"></i> Top Rankings</h3>
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="thead-dark">
                                    <tr>
                                        <th scope="col"><i class="fas fa-medal"></i> Rank</th>
                                        <th scope="col">Name</th>
                                        <th scope="col">One Rep Max (kg)</th>
                                        <th scope="col">Achieved On</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        var number = 0;
                                        @foreach (var ranking in this.Model.Rankings)
                                        {
                                            <tr>
                                                <td>@(++number)</td>
                                                <td>@ranking.FirstName @ranking.LastName</td>
                                                <td>@ranking.OneRepMax.ToString("F2")</td>
                                                <td><span class="utc-date" data-utc="@ranking.CreatedOn.ToString("o")"></span></td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
                else
                {
                    <div class="card-body text-center">
                        <p class="alert alert-info">No rankings available for this exercise yet.</p>
                    </div>
                }
                <div class="card-footer bg-light text-center mt-3">
                    <div class="d-flex justify-content-center gap-2 flex-wrap">
                        @if (this.Model.ShowCreateButton)
                        {
                            <a class="btn btn-primary btn-sm"
                               asp-controller="Achievement"
                               asp-route-exerciseId="@this.Model.Id"
                               asp-action="Create">
                                <i class="fas fa-plus"></i> Create Achievement
                            </a>
                        }
                        else if (!this.User.IsAdmin())
                        {
                            <a class="btn btn-outline-primary btn-sm"
                               asp-controller="Achievement"
                               asp-route-id="@this.Model.RelatedAchievementId"
                               asp-action="Edit">
                                <i class="fas fa-edit"></i> Update Achievement
                            </a>
                        }

                        @if (this.Model.ShowEditButton)
                        {
                            <a class="btn btn-warning btn-sm"
                               asp-controller="Exercise"
                               asp-route-exerciseId="@this.Model.Id"
                               asp-action="Edit">
                                <i class="fas fa-edit"></i> Edit Exercise
                            </a>
                        }

                        @if (this.Model.ShowDeleteButton)
                        {
                            <form method="post"
                                  asp-controller="Exercise"
                                  asp-action="Delete"
                                  asp-route-exerciseId="@this.Model.Id"
                                  onSubmit="return confirm('Are you sure you want to delete this exercise?')">
                                <button class="btn btn-danger btn-sm"><i class="fas fa-trash"></i> Delete Exercise</button>
                            </form>
                        }
                        <a asp-action="GetAll" class="btn btn-outline-secondary btn-sm"><i class="fas fa-arrow-left"></i> Back</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<style>
    .card {
        border-radius: 1rem;
    }

    .card-img-top {
        transition: transform 0.4s ease-in-out;
    }
    .card-img-top:hover {
        transform: scale(1.03);
    }

    .badge-overlay {
        position: absolute;
        top: 20px;
        left: 20px;
    }

    .badge-lg {
        font-size: 1.2rem;
        padding: 0.8rem 1.2rem;
        border-radius: 1rem;
    }

    .btn {
        transition: all 0.3s ease;
    }

    .btn-sm {
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
    }

    .btn-outline-primary:hover {
        background-color: #0d6efd;
        color: white;
    }

    .btn-outline-secondary:hover {
        background-color: #6c757d;
        color: white;
    }

    .alert {
        font-size: 1rem;
        position: relative;
        border-radius: .5rem;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .card-footer {
        padding: 1rem 1.5rem;
        border-top: 1px solid rgba(0,0,0,.125);
    }
</style>

<script src="~/js/convertUtcToLocaleDate.js"></script>
