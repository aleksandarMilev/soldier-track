@using Microsoft.AspNetCore.Identity
@using SoldierTrack.Data.Models
@using SoldierTrack.Services.Athlete
@using SoldierTrack.Web.Common.Extensions

@inject SignInManager<Athlete> SignInManager
@inject UserManager<Athlete> UserManager
@inject IAthleteService athleteService

<ul class="navbar-nav">


    @{
        var userIsLogged = this.User?.Identity?.IsAuthenticated ?? false;
        var name = userIsLogged ? await this.athleteService.GetNameByIdAsync(this.User!.GetId()!) : "Guest";
    }

    <li class="nav-item">
        <a class="nav-link text-dark" style="font-family: 'Pacifico', cursive; font-size: 1.2em">@($"Hello, {name}!")</a>
    </li>

    @if (this.SignInManager.IsSignedIn(this.User!))
    {
        <li class="nav-item">
            <form  
                class="form-inline" 
                asp-area="Identity"
                asp-page="/Account/Logout" 
                asp-route-returnUrl="@this.Url.Action("Index", "Home", new { area = "" })">
                <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
